Airport: 
    Functional dependencies:
    airportcode -> airportname,country
    airportname -> country 
    candidatekeys: airportcode,airportname
    primarykeys: airportcode
    Normal form: 2NF, since we felt that breaking up airportname with country would not serve any significant purpose. 
    One could separate airportname and country in another table with airportname as a primary key. 
    However we do not know if airportname should be unique, 
    since logically speaking airports in different countries can have the same name.

Route:
    Functional dependencies:
    id -> routerprice, arrival, departure
    candidate keys:id
    Primary keys:id
    Normal form: BCNF





schedual_weekly:
    Functional dependencies:
    id-> year, departure_time, route,day
    candidate keys: id
    primary keys: id
    Normal form: BCNF

weekday:
    Functional dependencies:
    day-> weekdayfactor 
    candidate keys: day
    primary keys: day
    Normal form: BCNF

Flight:
    Functional dependencies:
    flightnumber -> bookedpassangers, week,time
    Candidate keys: flightnumber
    Primary keys: flightnumber
    Normal form: BCNF

Reservation:
    Functional dependencies:
    reservationnumber-> flight
    Candidate keys: reservationnumber
    Primary keys: reservationnumber
    Normal form: BCNF

Reservation_list
    Functional dependencies:
    trivial
    Candidate keys: {ssn,reservation}
    Primary keys: {ssn,reservation}
    Normal form: BCNF


Person:
    Functional dependencies:
    ssn->name
    Candidate keys: ssn
    Primary keys: ssn
    Normal form:BCNF

Passenger:
    Functional dependencies:
    ssn-> passportnumber
    candidate keys: ssn, passportnumber
    primary key:ssn
    Normal form: 3NF, we did it like this since we didnt want the Person entity to be forced to 
    have a passportnumber since a person can pay for the booking without being a passenger,
    which means that particular person wouldn't need to share passport information.
    
    

Booking
    Functional dependencies:
    reservationnumber -> price, profitfactor,contactperson
    Candidate keys: reservationnumber
    Primary keys: reservationnumber
    Normal form: BCNF

Contact:
    Functional dependencies:
    ssn-> phone_nr, emailadress
    Candidate keys: ssn
    Primary keys:ssn
    Normal form: BCNF


Card_information:
    Functional dependencies:
    ssn,reservationnumber-> cardnumber
    cardnumber->ssn
    Candidate keys: {ssn,reservationnumber}
    Primary keys: {ssn,reservationnumber}
    Normal form: 3NF, The cardnumbers can pinpoint the person owning the card, 
    but similar motivation to the passenger entity we dont want to have the cardinformation in the Person entity.
